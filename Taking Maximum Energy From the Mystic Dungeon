class Solution {
public:
    // int maximumEnergy(vector<int>& energy, int k) {
    //     int n = energy.size();
    //     int max_Energy = -1e8;

    //     for(int i = 0; i < n; i++) {
    //         int sum = 0;
    //         for(int j = i; j < n; j += k) {
    //             sum += energy[j];
    //         }
    //         max_Energy = max(max_Energy, sum);
    //     }
    //     return max_Energy;
    // }

    int maximumEnergy(vector<int>& energy, int k) {
        int n = energy.size(), ans = INT_MIN;
        vector<int> dp(n, -1);

        for(int i = n - 1; i >= 0; i--) {
            if(i + k < n) {
                dp[i] = energy[i] + dp[i + k];
            }else{
                dp[i] = energy[i];
            }
            ans = max(ans,dp[i]);
        }
        return ans;
    }


    // int maximumEnergy(vector<int>& energy, int k) {
    //     int n = energy.size();

    //     vector<int> prefix(n, 0);

    //     prefix[0] = energy[0];

    //     for(int i = 1; i < n; i++) {
    //         prefix[i] = prefix[i - 1] + energy[i];
    //     }

    //     int maxi = 0, max_ind = 0;
    //     for(int i = 0; i < n; i++) {
    //         if(prefix[i] > maxi) {
    //             maxi = prefix[i];
    //             max_ind = i;
    //         }
    //     }
    //     int result = 0;
    //     for(int i = max_ind; i < n; i += k) {
    //         result += energy[i];
    //     }

    //     return result;
    // }
};
